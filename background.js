// Generated by CoffeeScript 1.7.1
(function() {
  var execJQueryVersion, filter, getLocalJsFile, handler, localVersion,
    __indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };

  localVersion = ["1.2.1", "1.2.2", "1.2.3", "1.2.4", "1.2.5", "1.2.6", "1.3.1", "1.3.2", "1.4.1", "1.4.2", "1.4.3", "1.4.4", "1.5.1", "1.5.2", "1.6.1", "1.6.2", "1.6.3", "1.6.4", "1.7.0", "1.7.1", "1.7.2", "1.8.0", "1.8.1", "1.8.2", "1.8.3", "1.9.0", "1.9.1", "1.10.0", "1.10.1", "1.10.2", "1.11.0", "1.11.1", "2.0.0", "2.0.1", "2.0.2", "2.0.3", "2.1.0", "2.1.1"];

  filter = {
    urls: ["http://*/*.js", "https://*/*.js"]
  };

  handler = function(details) {
    var jQueryVersion, localCache;
    jQueryVersion = execJQueryVersion(details.url);
    if (jQueryVersion) {
      localCache = getLocalJsFile(jQueryVersion);
      if (localCache) {
        return {
          redirectUrl: localCache
        };
      }
    }
  };


  /*
      get jquery version if url is a valid jquery
      @return {String} jquery version, empty if is not a valid jquery
   */

  execJQueryVersion = function(originalURL) {
    var jQueryVersionRegex, matches;
    if (originalURL.toLowerCase().indexOf('jquery') > -1) {
      jQueryVersionRegex = /\d\.\d*\.\d/g;
      matches = jQueryVersionRegex.exec(originalURL);
      if (matches) {
        return matches[0];
      }
    }
    return "";
  };


  /*
      get local jquery file by version
      @return {String} local js file, empty if not have one
   */

  getLocalJsFile = function(version) {
    if (__indexOf.call(localVersion, version) >= 0) {
      return chrome.extension.getURL("files/jQuery/jquery-" + version + ".min.js");
    }
    return "";
  };

  chrome.webRequest.onBeforeRequest.addListener(handler, filter, ["blocking"]);

}).call(this);

//# sourceMappingURL=background.map
